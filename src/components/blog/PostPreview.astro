---
import type { HTMLTag, Polymorphic } from 'astro/types';
import type { CollectionEntry } from 'astro:content';
import FormattedDate from '../FormattedDate.astro';

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<'post'>;
	withDesc?: boolean;
};

const { as: Tag = 'div', post, withDesc = false } = Astro.props;
const { title, description, draft, updatedDate, publishDate} = post.data;
const postDate = updatedDate ?? publishDate;
---

<li class="flex flex-col gap-2 text-secondary-foreground sm:flex-row sm:gap-x-4 [&_q]:basis-full">
	<FormattedDate class="min-w-[120px]" date={postDate} />

	<Tag>
		{draft && <span class="text-red-500">(Draft) </span>}

		<a
			data-astro-prefetch
			href={`/blog/${post.slug}/`}
			class="font-bold transition-all hover:text-accent-300"
		>
			{title}
		</a>
		{
			withDesc && description && (
				<p class="line-clamp-4 block text-sm italic text-muted-foreground">{description}</p>
			)
		}
	</Tag>
</li>
